{
  "guild": {
    "id": "774897545717219328",
    "name": "Genie Community",
    "iconUrl": "https://cdn.discordapp.com/icons/774897545717219328/37e348a8a0b2b83ce9241942f0b9a8b5.png?size=512"
  },
  "channel": {
    "id": "1067296046276935680",
    "type": "GuildPublicThread",
    "categoryId": "1032309299512344626",
    "category": "help-forum",
    "name": "Non-relational database selection and integration advice",
    "topic": null
  },
  "dateRange": {
    "after": null,
    "before": null
  },
  "exportedAt": "2023-10-17T19:22:33.0249655+00:00",
  "messages": [
    {
      "id": "1067296046276935680",
      "type": "Default",
      "timestamp": "2023-01-24T04:13:26.834+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Hi all, \n\nI am at the very beginning of using Genie to set up a psychophysics experiment that my lab has been developing. We are planning to host it on AWS. I am looking for some database setup advice. Upon completion of the experiment, every user will have an approximately 32x800 (exact size unknown until they begin the experiment, as it is based on selected settings) matrix, a vector whose length is the second dimension of the matrix, and some configuration settings that need to be saved. From what I’ve learned so far, I do not think a relational database such as those that SearchLight supports is the correct choice for this data. I am very new to this type of work though, so I would appreciate any thoughts on good storage methods for this data and any Julia packages that can be integrated with Genie to support it. \n\nThank you!",
      "author": {
        "id": "613037111486185509",
        "name": "knello99",
        "discriminator": "0000",
        "nickname": "knello99",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/1.png"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1067537817938448435",
      "type": "Default",
      "timestamp": "2023-01-24T20:14:09.69+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "I'm not an expert, but I'd say it depends on your code. If you're moving around a struct that has the matrix, vector and configuration as fields then it might make sense to use an ORM. Or even if they're separate structs. It's just that it could be easier to use JLD2 and JSON files if you don't need to do searches, filtering or other DB stuff\n\nI'm working on a database example where I'm predicting the value of houses stored in a database. I'm constantly loading House objects from the DB to update their value predictions and save them back to the DB, and the ORM comes in very handy since i don't have to write any SQL. You can take a look at the code, especially the app.jl where the load and save operations are performed. Sorry that it's not documented, I'll do it soon \uD83D\uDE42\n\nhttps://github.com/GenieFramework/GenieFrameworkDemos_NewAPI/blob/main/Database/",
      "author": {
        "id": "743412727464067154",
        "name": "pere_g",
        "discriminator": "0000",
        "nickname": "Pere",
        "color": "#71DAFF",
        "isBot": false,
        "roles": [
          {
            "id": "1007312585995071698",
            "name": "GENIE TEAM",
            "color": "#71DAFF",
            "position": 8
          },
          {
            "id": "1032698093654777886",
            "name": "Data Science Advocate",
            "color": "#E91E63",
            "position": 5
          }
        ],
        "avatarUrl": "https://cdn.discordapp.com/avatars/743412727464067154/bc30abeb49653e9978c0f7c90f4486a8.png?size=512"
      },
      "attachments": [],
      "embeds": [
        {
          "title": "GenieFrameworkDemos_NewAPI/Database at main · GenieFramework/GenieF...",
          "url": "https://github.com/GenieFramework/GenieFrameworkDemos_NewAPI/blob/main/Database/",
          "timestamp": null,
          "description": "Demos for new reactive API. Contribute to GenieFramework/GenieFrameworkDemos_NewAPI development by creating an account on GitHub.",
          "color": "#1E2327",
          "thumbnail": {
            "url": "https://images-ext-2.discordapp.net/external/qZMFYcgk0HRMVQSRGCOry4pOrMoIi3kxgjmn8-g2jrQ/https/opengraph.githubassets.com/4479bc2342a9db43fb35ec108644dbb09f7ccb549fae8b6941444b275ec128c6/GenieFramework/GenieFrameworkDemos_NewAPI",
            "width": 1200,
            "height": 600
          },
          "images": [],
          "fields": []
        }
      ],
      "stickers": [],
      "reactions": [],
      "mentions": []
    },
    {
      "id": "1067652963482480732",
      "type": "Default",
      "timestamp": "2023-01-25T03:51:42.527+00:00",
      "timestampEdited": null,
      "callEndedTimestamp": null,
      "isPinned": false,
      "content": "Thank you for the suggestions! I think a JSON storage method might be just the thing, since the size of the matrices and vectors (really, it could be stored as vectors and integers which are then concatenated) can be such a wide range, and they only ever go together as pairs. I also won’t need to access individual indices. The most preprocessing before analysis I think I will need to do is to combine multiple groups of vectors and matrices by matching user_ID and experiment_ID fields. \n\nDo you know of any examples of storing JSON files with SearchLight? Is it as simple as creating the file and storing it in a :string column?",
      "author": {
        "id": "613037111486185509",
        "name": "knello99",
        "discriminator": "0000",
        "nickname": "knello99",
        "color": null,
        "isBot": false,
        "roles": [],
        "avatarUrl": "https://cdn.discordapp.com/embed/avatars/1.png"
      },
      "attachments": [],
      "embeds": [],
      "stickers": [],
      "reactions": [],
      "mentions": []
    }
  ],
  "messageCount": 3
}